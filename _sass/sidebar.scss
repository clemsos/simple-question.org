/*
 * Sidebar
 *
 * The sidebar is the drawer, the item we are toggling with our handy hamburger
 * button in the corner of the page.
 *
 * This particular sidebar implementation was inspired by Chris Coyier's
 * "Offcanvas Menu with CSS Target" article, and the checkbox variation from the
 * comments by a reader. It modifies both implementations to continue using the
 * checkbox (no change in URL means no polluted browser history), but this uses
 * `position` for the menu to avoid some potential content reflow issues.
 *
 * Source: http://css-tricks.com/off-canvas-menu-with-css-target/#comment-207504
 */

/* Style and "hide" the sidebar */
.sidebar {
  position: fixed;
  top: 0;
  bottom: 0;
  left: -14rem;
  width: 14rem;
  visibility: hidden;
  overflow-y: auto;
  font-family: "PT Sans", Helvetica, Arial, sans-serif;
  font-size: .875rem; /* 15px */
  color: rgba(255,255,255,.6);
  background-color: #202020;
}
@media (min-width: 30rem) {
  .sidebar {
    font-size: .75rem; /* 14px */
  }
}

/* Sidebar content */
.sidebar a {
  font-weight: normal;
  color: #fff;
}
.sidebar-item {
  padding: 1rem;
}
.sidebar-item p:last-child {
  margin-bottom: 0;
}

/* Sidebar nav */
.sidebar-nav {
  border-bottom: 1px solid rgba(255,255,255,.1);
}
.sidebar-nav-item {
  display: block;
  padding: .5rem 1rem;
  border-top: 1px solid rgba(255,255,255,.1);
}
.sidebar-nav-item.active,
a.sidebar-nav-item:hover,
a.sidebar-nav-item:focus {
  text-decoration: none;
  background-color: rgba(255,255,255,.1);
  border-color: transparent;
}

@media (min-width: 48rem) {
  .sidebar-item {
    padding: 1.5rem;
  }
  .sidebar-nav-item {
    padding-left:  1.5rem;
    padding-right: 1.5rem;
  }
}

/* Hide the sidebar checkbox that we toggle with `.sidebar-toggle` */
.sidebar-checkbox {
  display: none;
}

.sidebar-toggle-wrapper {
  position: fixed;
  top: 0;
  height: 100%;
}
/* Style the `label` that we use to target the `.sidebar-checkbox` */
.sidebar-toggle {
  background-color: #fff;
  border-bottom: 3px solid $primary-color;
  .dot {
    background-color: $primary-color;
  }
  position: sticky;
  top:  0;
  left: 0;
  width: 40px;
  height: 40px;
  display: block;
  padding: .5rem .65rem;
  border-radius: 0 0 50px 0;
  cursor: pointer;
}
// .sidebar-toggle:before {
//   display: block;
//   content: "";
//   width: 100%;
//   padding-bottom: .125rem;
//   border-top: .375rem double;
//   border-bottom: .125rem solid;
//
//   /* Make the border inside the box */
//   -webkit-box-sizing: border-box;
//      -moz-box-sizing: border-box;
//           box-sizing: border-box;
// }

.sidebar-toggle:active,
#sidebar-checkbox:checked ~ .wrap .sidebar-toggle {
  background-color: $primary-color;
  border-color: #fff;
  .dot {
    background-color: #fff;
  }
}

@media (min-width: 30.1rem) {
  .sidebar-toggle {
    position: sticky;
  }
  .sidebar-toggle:before {
    padding-bottom: .15rem;
    border-top-width: .45rem;
    border-bottom-width: .15rem;
  }
}


/* Slide effect
 *
 * Handle the sliding effects of the sidebar and content in one spot, seperate
 * from the default styles.
 *
 * As an a heads up, we don't use `transform: translate3d()` here because when
 * mixed with `position: fixed;` for the sidebar toggle, it creates a new
 * containing block. Put simply, the fixed sidebar toggle behaves like
 * `position: absolute;` when transformed.
 *
 * Read more about it at http://meyerweb.com/eric/thoughts/2011/09/12/.
 */

.wrap,
.sidebar,
.sidebar-toggle {
    -webkit-backface-visibility: hidden;
       -moz-backface-visibility: hidden;
        -ms-backface-visibility: hidden;
            backface-visibility: hidden;
  -webkit-perspective: 1000;
     -moz-perspective: 1000;
      -ms-perspective: 1000;
          perspective: 1000;
}
.sidebar {
  -webkit-transition: all .3s ease-in-out;
     -moz-transition: all .3s ease-in-out;
      -ms-transition: all .3s ease-in-out;
          transition: all .3s ease-in-out;
}
.wrap,
.sidebar-toggle {
  -webkit-transition: left .3s ease-in-out;
     -moz-transition: left .3s ease-in-out;
      -ms-transition: left .3s ease-in-out;
          transition: left .3s ease-in-out;
}

#sidebar-checkbox:checked + .sidebar {
  left: 0;
  visibility: visible;
}
#sidebar-checkbox:checked ~ .wrap {
  left: 14rem;
}
